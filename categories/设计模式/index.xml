<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>设计模式 on 一个懒散的程序猿</title>
    <link>https://catcheroftime.github.io/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
    <description>Recent content in 设计模式 on 一个懒散的程序猿</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Mon, 24 May 2021 00:15:00 +0800</lastBuildDate>
    
	<atom:link href="https://catcheroftime.github.io/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>设计模式-导读&amp;助记</title>
      <link>https://catcheroftime.github.io/blog/2021-05/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%AF%BC%E8%AF%BB%E5%8A%A9%E8%AE%B0/</link>
      <pubDate>Mon, 24 May 2021 00:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2021-05/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%AF%BC%E8%AF%BB%E5%8A%A9%E8%AE%B0/</guid>
      <description>&lt;p&gt;你确定你真的对记住了所有的设计模式了吗？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>迭代器模式</title>
      <link>https://catcheroftime.github.io/blog/2021-05/%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Thu, 06 May 2021 20:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2021-05/%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F/</guid>
      <description></description>
    </item>
    
    <item>
      <title>访问者模式</title>
      <link>https://catcheroftime.github.io/blog/2021-05/%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Tue, 04 May 2021 20:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2021-05/%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;U1S1， 挺复杂的一个设计模式~&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>状态模式</title>
      <link>https://catcheroftime.github.io/blog/2021-04/%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sat, 10 Apr 2021 20:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2021-04/%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;又是一种优化过于臃肿 &lt;code&gt;if...else...&lt;/code&gt; 语句的方法~&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>中介者模式</title>
      <link>https://catcheroftime.github.io/blog/2021-04/%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Thu, 08 Apr 2021 20:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2021-04/%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;房东：到处找租客可太麻烦, 直接交给中介, 交给他们管理吧~&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>备忘录模式</title>
      <link>https://catcheroftime.github.io/blog/2021-04/%E5%A4%87%E5%BF%98%E5%BD%95%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Tue, 06 Apr 2021 20:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2021-04/%E5%A4%87%E5%BF%98%E5%BD%95%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;沃日，竟然被小怪打死了，先回个档 ~&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>职责链模式</title>
      <link>https://catcheroftime.github.io/blog/2021-04/%E8%81%8C%E8%B4%A3%E9%93%BE%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Thu, 01 Apr 2021 12:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2021-04/%E8%81%8C%E8%B4%A3%E9%93%BE%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;&amp;ndash; 组长,我想请5天假? &amp;ndash; 我没权利批准,我去帮你问问老板~&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>命令模式</title>
      <link>https://catcheroftime.github.io/blog/2021-03/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sat, 13 Mar 2021 20:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2021-03/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;小明, 你妈让我喊你回去吃饭啦~&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>解释器模式</title>
      <link>https://catcheroftime.github.io/blog/2021-03/%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Thu, 11 Mar 2021 20:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2021-03/%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;我们开发时使用频率还挺低，但广泛运用于编译器的一种设计模式~&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>享元模式</title>
      <link>https://catcheroftime.github.io/blog/2021-03/%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sat, 06 Mar 2021 10:10:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2021-03/%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;网盘存储同一份文件被不同用户反复保存该怎么办?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>模板方法模式</title>
      <link>https://catcheroftime.github.io/blog/2021-02/%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Thu, 11 Feb 2021 20:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2021-02/%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;超实用的代码复用模式&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>策略模式</title>
      <link>https://catcheroftime.github.io/blog/2021-01/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sat, 30 Jan 2021 10:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2021-01/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;如果看过一些关于如何干掉 &lt;code&gt;if...else&lt;/code&gt; 的文章，大部分都会介绍到 &lt;code&gt;策略模式&lt;/code&gt;，而今天主要就是带大家更全面的了解什么是 &lt;code&gt;策略模式&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>外观模式</title>
      <link>https://catcheroftime.github.io/blog/2021-01/%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Fri, 15 Jan 2021 10:10:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2021-01/%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F/</guid>
      <description></description>
    </item>
    
    <item>
      <title>装饰模式</title>
      <link>https://catcheroftime.github.io/blog/2021-01/%E8%A3%85%E9%A5%B0%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Tue, 12 Jan 2021 10:10:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2021-01/%E8%A3%85%E9%A5%B0%E6%A8%A1%E5%BC%8F/</guid>
      <description></description>
    </item>
    
    <item>
      <title>组成模式</title>
      <link>https://catcheroftime.github.io/blog/2020-12/%E7%BB%84%E6%88%90%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Fri, 11 Dec 2020 10:10:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2020-12/%E7%BB%84%E6%88%90%E6%A8%A1%E5%BC%8F/</guid>
      <description></description>
    </item>
    
    <item>
      <title>桥接模式</title>
      <link>https://catcheroftime.github.io/blog/2020-12/%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Mon, 07 Dec 2020 10:10:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2020-12/%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/</guid>
      <description></description>
    </item>
    
    <item>
      <title>代理模式</title>
      <link>https://catcheroftime.github.io/blog/2020-11/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Thu, 26 Nov 2020 23:10:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2020-11/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/</guid>
      <description></description>
    </item>
    
    <item>
      <title>适配器模式</title>
      <link>https://catcheroftime.github.io/blog/2020-11/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Wed, 25 Nov 2020 23:10:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2020-11/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;你挑的嘛，偶像&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>原型模式</title>
      <link>https://catcheroftime.github.io/blog/2020-11/%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Tue, 17 Nov 2020 12:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2020-11/%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;可能是最简单的创建型模式&amp;ndash;原型模式&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>UML类图</title>
      <link>https://catcheroftime.github.io/blog/2020-11/uml%E7%B1%BB%E5%9B%BE/</link>
      <pubDate>Sun, 15 Nov 2020 00:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2020-11/uml%E7%B1%BB%E5%9B%BE/</guid>
      <description>&lt;p&gt;在总结设计模式的时候，经常需要通过它们的 &lt;code&gt;UML&lt;/code&gt; 图来更整体的了解设计模式的代码结构，这篇文章主要就是总结 &lt;code&gt;UML&lt;/code&gt; 的一些相关知识&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>建造者模式</title>
      <link>https://catcheroftime.github.io/blog/2020-11/%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Fri, 06 Nov 2020 12:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2020-11/%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;来来来，换个建造者模式走一走&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>抽象工厂模式</title>
      <link>https://catcheroftime.github.io/blog/2020-11/%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Tue, 03 Nov 2020 23:10:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2020-11/%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;经过一层一层抽象，来到了最复杂的抽象工厂模式。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>工厂方法模式</title>
      <link>https://catcheroftime.github.io/blog/2020-10/%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Thu, 29 Oct 2020 22:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2020-10/%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;本篇文章会先介绍 &lt;code&gt;工厂方法模式​&lt;/code&gt; 的一些知识和特点，并在最后对 &lt;code&gt;工厂方法模式&lt;/code&gt; 和 &lt;code&gt;简单工厂模式&lt;/code&gt; 这二者之间的异同做一些分析&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>简单工厂模式</title>
      <link>https://catcheroftime.github.io/blog/2020-10/%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Mon, 26 Oct 2020 22:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2020-10/%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;简单工厂走一走~&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>单例模式</title>
      <link>https://catcheroftime.github.io/blog/2020-10/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Mon, 19 Oct 2020 10:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2020-10/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;单例模式可能是最简单，最常用的设计模式之一，这篇文章主要总结一些常用的实现方式&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>发布订阅模式</title>
      <link>https://catcheroftime.github.io/blog/2020-09/%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sat, 19 Sep 2020 20:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2020-09/%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;书接上文观察者模式，今天介绍一个目的和观察者模式一样，但是在代码结构的上存在一定区别的设计模式&amp;ndash;发布订阅模式&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>观察者模式</title>
      <link>https://catcheroftime.github.io/blog/2020-09/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Wed, 16 Sep 2020 20:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2020-09/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;最近在研究 &lt;code&gt;Qt&lt;/code&gt; 信号槽的源码实现，在看源码的过程中发现 &lt;code&gt;Qt&lt;/code&gt; 信号槽很类似于观察者模式，所以先整理一篇观察者模式的文章&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>