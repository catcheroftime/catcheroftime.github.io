<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on 一个懒散的程序猿</title>
    <link>https://catcheroftime.github.io/blog/</link>
    <description>Recent content in Blogs on 一个懒散的程序猿</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Mon, 10 Jun 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://catcheroftime.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>隐式类型转换到底是个啥</title>
      <link>https://catcheroftime.github.io/blog/2020-10/%E9%9A%90%E5%BC%8F%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E5%88%B0%E5%BA%95%E6%98%AF%E4%B8%AA%E5%95%A5/</link>
      <pubDate>Sat, 17 Oct 2020 12:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2020-10/%E9%9A%90%E5%BC%8F%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E5%88%B0%E5%BA%95%E6%98%AF%E4%B8%AA%E5%95%A5/</guid>
      <description>&lt;p&gt;让我们看看编译器到底在哪些情况下会去做隐式转化&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>进一步了解 QScopedPointer</title>
      <link>https://catcheroftime.github.io/blog/2020-10/%E8%BF%9B%E4%B8%80%E6%AD%A5%E4%BA%86%E8%A7%A3-qscopedpointer/</link>
      <pubDate>Fri, 09 Oct 2020 12:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2020-10/%E8%BF%9B%E4%B8%80%E6%AD%A5%E4%BA%86%E8%A7%A3-qscopedpointer/</guid>
      <description>&lt;p&gt;上一篇 &lt;code&gt;QScopedPointer源码解析&lt;/code&gt; 详细介绍了代码层次的实现，同时也留下了一个代码上的问题&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;隐式类型转换这样设计的原因&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>安全的布尔类型转化</title>
      <link>https://catcheroftime.github.io/blog/2020-10/%E5%AE%89%E5%85%A8%E7%9A%84%E5%B8%83%E5%B0%94%E7%B1%BB%E5%9E%8B%E8%BD%AC%E5%8C%96/</link>
      <pubDate>Tue, 06 Oct 2020 12:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2020-10/%E5%AE%89%E5%85%A8%E7%9A%84%E5%B8%83%E5%B0%94%E7%B1%BB%E5%9E%8B%E8%BD%AC%E5%8C%96/</guid>
      <description>&lt;p&gt;学习如何将一个对象转换成 &lt;code&gt;bool&lt;/code&gt;对象的同时不引入任何不利的影响&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>QScopedPointer源码分析</title>
      <link>https://catcheroftime.github.io/blog/2020-09/qscopedpointer%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link>
      <pubDate>Wed, 23 Sep 2020 00:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2020-09/qscopedpointer%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</guid>
      <description>&lt;p&gt;&lt;code&gt;QT&lt;/code&gt; 下类似于 &lt;code&gt;std::unique_ptr&lt;/code&gt; 的 &lt;code&gt;QScopedPointer&lt;/code&gt; 智能指针源码分析&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>发布订阅模式</title>
      <link>https://catcheroftime.github.io/blog/2020-09/%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sat, 19 Sep 2020 20:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2020-09/%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;书接上文观察者模式，今天介绍一个目的和观察者模式一样，但是在代码结构的上存在一定区别的设计模式&amp;ndash;发布订阅模式&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>观察者模式</title>
      <link>https://catcheroftime.github.io/blog/2020-09/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Wed, 16 Sep 2020 20:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2020-09/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;最近在研究 &lt;code&gt;Qt&lt;/code&gt; 信号槽的源码实现，在看源码的过程中发现 &lt;code&gt;Qt&lt;/code&gt; 信号槽很类似于观察者模式，所以先整理一篇观察者模式的文章&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>QInputDialog源码分析(下)</title>
      <link>https://catcheroftime.github.io/blog/2020-09/qinputdialog%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B8%8B/</link>
      <pubDate>Thu, 03 Sep 2020 00:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2020-09/qinputdialog%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B8%8B/</guid>
      <description>&lt;p&gt;&lt;code&gt;QInputDialog源码分析(上)&lt;/code&gt; 里主要针对 &lt;code&gt;QInputDialogPrivate&lt;/code&gt; 类的实现做了很详细的介绍，第二部分主要就是介绍 &lt;code&gt;QInputDialog&lt;/code&gt; 和看源码过程中一些其他知识点的总结&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>QInputDialog源码分析(上)</title>
      <link>https://catcheroftime.github.io/blog/2020-09/qinputdialog%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B8%8A/</link>
      <pubDate>Wed, 02 Sep 2020 00:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2020-09/qinputdialog%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B8%8A/</guid>
      <description>&lt;p&gt;前几天的博客中介绍了如何更自由的调整 &lt;code&gt;QInputDialog&lt;/code&gt; 类，当时留了一个坑，想完整的学习 &lt;code&gt;QInputDialog&lt;/code&gt; 源码的实现，我回来填坑了, 整片文章可能比较冗长，主要是总结了阅读源码过程中一些感受和疑问&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Qt-图片裁切</title>
      <link>https://catcheroftime.github.io/blog/2020-08/qt-%E5%9B%BE%E7%89%87%E8%A3%81%E5%88%87/</link>
      <pubDate>Sun, 30 Aug 2020 20:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2020-08/qt-%E5%9B%BE%E7%89%87%E8%A3%81%E5%88%87/</guid>
      <description>&lt;p&gt;在上传头像过程中，经常会需要将图片裁切成指定的大小，给定一个指定大小的裁切框，调整裁切框位置裁切出理想的图片，今天在这里实现一个简单的图片裁切的应用&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Qt-自定义右下角提示信息弹窗</title>
      <link>https://catcheroftime.github.io/blog/2020-08/qt-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%B3%E4%B8%8B%E8%A7%92%E6%8F%90%E7%A4%BA%E4%BF%A1%E6%81%AF%E5%BC%B9%E7%AA%97/</link>
      <pubDate>Tue, 11 Aug 2020 00:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2020-08/qt-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%B3%E4%B8%8B%E8%A7%92%E6%8F%90%E7%A4%BA%E4%BF%A1%E6%81%AF%E5%BC%B9%E7%AA%97/</guid>
      <description>&lt;p&gt;偶然看到 &lt;code&gt;web&lt;/code&gt; 端某个应用，右下角的错误信息弹窗配合上动画看起来很不错，于是想通过 &lt;code&gt;Qt&lt;/code&gt; 自己实现一个类似的功能&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Qt QInputDialog等自带弹窗样式修改</title>
      <link>https://catcheroftime.github.io/blog/2020-08/qt-qinputdialog%E7%AD%89%E8%87%AA%E5%B8%A6%E5%BC%B9%E7%AA%97%E6%A0%B7%E5%BC%8F%E4%BF%AE%E6%94%B9/</link>
      <pubDate>Sat, 01 Aug 2020 00:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2020-08/qt-qinputdialog%E7%AD%89%E8%87%AA%E5%B8%A6%E5%BC%B9%E7%AA%97%E6%A0%B7%E5%BC%8F%E4%BF%AE%E6%94%B9/</guid>
      <description>&lt;p&gt;在使用 QT 开发客户端的过程中，QT 自带的弹窗类实现的功能很简洁，例如 &lt;strong&gt;QMessageBox&lt;/strong&gt; 作为提醒报错等功能弹窗， &lt;strong&gt;QInputDialog&lt;/strong&gt; 作为 &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt; 等需要用户定义值的获取，使用起来很方便，不用自己重新造轮子，但是在实际开发客户端的过程中，为了保证软件整体样式风格一致，需要对这些弹窗的样式也进行统一，这篇文章简单介绍一下这些类修改样式的一些方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title> QT 中文问题和路径中空格问题</title>
      <link>https://catcheroftime.github.io/blog/2020-04/qt-%E4%B8%AD%E6%96%87%E9%97%AE%E9%A2%98%E5%92%8C%E8%B7%AF%E5%BE%84%E4%B8%AD%E7%A9%BA%E6%A0%BC%E9%97%AE%E9%A2%98/</link>
      <pubDate>Thu, 02 Apr 2020 15:50:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2020-04/qt-%E4%B8%AD%E6%96%87%E9%97%AE%E9%A2%98%E5%92%8C%E8%B7%AF%E5%BE%84%E4%B8%AD%E7%A9%BA%E6%A0%BC%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;p&gt;记录在使用 QT 开发过程中碰到的关于 QSetting 编写配置文件读写中文的问题，QProcess command 路径中存在中文的问题，以及使用 QString 转 std::string 时，原QString携带中文的问题&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C&#43;&#43;11新特性整理</title>
      <link>https://catcheroftime.github.io/blog/2020-03/c-11%E6%96%B0%E7%89%B9%E6%80%A7%E6%95%B4%E7%90%86/</link>
      <pubDate>Tue, 10 Mar 2020 18:22:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2020-03/c-11%E6%96%B0%E7%89%B9%E6%80%A7%E6%95%B4%E7%90%86/</guid>
      <description>&lt;p&gt;简单整理了 C++11 的新特性&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>windows下通过msys2&#43;mingw编译ffmpeg</title>
      <link>https://catcheroftime.github.io/blog/2019-12/windows%E4%B8%8B%E9%80%9A%E8%BF%87msys2-mingw%E7%BC%96%E8%AF%91ffmpeg/</link>
      <pubDate>Wed, 11 Dec 2019 17:10:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-12/windows%E4%B8%8B%E9%80%9A%E8%BF%87msys2-mingw%E7%BC%96%E8%AF%91ffmpeg/</guid>
      <description>&lt;p&gt;在使用 &lt;code&gt;ffmpeg&lt;/code&gt; 过程中，如果是直接使用 &lt;code&gt;ffmpeg&lt;/code&gt; 的库，可以直接在官方下载动态库或者静态库使用，但是当需要根据实际情况修改一些 &lt;code&gt;ffmpeg&lt;/code&gt; 的代码，这时候避免不掉的是编译 &lt;code&gt;ffmpeg&lt;/code&gt; 的源码，下面是我亲测可用的编译过程的整理&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>阴阳师自动挂机脚本-python</title>
      <link>https://catcheroftime.github.io/blog/2019-11/%E9%98%B4%E9%98%B3%E5%B8%88%E8%87%AA%E5%8A%A8%E6%8C%82%E6%9C%BA%E8%84%9A%E6%9C%AC-python/</link>
      <pubDate>Tue, 05 Nov 2019 19:35:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-11/%E9%98%B4%E9%98%B3%E5%B8%88%E8%87%AA%E5%8A%A8%E6%8C%82%E6%9C%BA%E8%84%9A%E6%9C%AC-python/</guid>
      <description>&lt;p&gt;阴阳师每次出现大型活动类似于肝绘卷或者超鬼王之类的，每次的手动简直太伤头发了，太伤肝了，而且每次都是重复性的动作，点击开始，时间一到或者怪一死，进入结算界面之后然后点击结束，一个循环就就结束了，然后重新开始，手动既无聊又累，所有广大玩家想出了很多解放双手的点子，我也不例外，下面简单介绍我是如何用 &lt;code&gt;python&lt;/code&gt; 实现简单的挂机脚本,先说一下脚本应用的场景，在电脑上运行的阴阳师也就是PC版，在电脑上使用手机模拟器也可以&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>shell 使用总结</title>
      <link>https://catcheroftime.github.io/blog/2019-10/shell-%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</link>
      <pubDate>Tue, 29 Oct 2019 18:22:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-10/shell-%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;p&gt;在 &lt;code&gt;ubuntu&lt;/code&gt; 下部署服务的时候，经常出现大量反复的操作，而且还容易出错，所有刚好可以通过 &lt;code&gt;shell&lt;/code&gt; 脚本的形式 将这个部分完美替代了&lt;br&gt;在写脚本过程中，对自己使用到一些知识进行了简单的总结&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>QT-D指针Q指针</title>
      <link>https://catcheroftime.github.io/blog/2019-10/qt-d%E6%8C%87%E9%92%88q%E6%8C%87%E9%92%88/</link>
      <pubDate>Fri, 25 Oct 2019 15:56:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-10/qt-d%E6%8C%87%E9%92%88q%E6%8C%87%E9%92%88/</guid>
      <description>&lt;p&gt;在查看 &lt;code&gt;QT&lt;/code&gt; 源码的过程中，QT 无处不在的 &lt;code&gt;Q_D&lt;/code&gt;, &lt;code&gt;Q_Q&lt;/code&gt; 宏，在看源码过程中可能需要先理解，才能更好的继续下去&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>程序员的自我修养-链接装载与库</title>
      <link>https://catcheroftime.github.io/blog/2019-10/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB-%E9%93%BE%E6%8E%A5%E8%A3%85%E8%BD%BD%E4%B8%8E%E5%BA%93/</link>
      <pubDate>Sat, 12 Oct 2019 11:02:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-10/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB-%E9%93%BE%E6%8E%A5%E8%A3%85%E8%BD%BD%E4%B8%8E%E5%BA%93/</guid>
      <description>&lt;p&gt;每次在用 &lt;code&gt;QT&lt;/code&gt; 点击编译总是很好奇编译器具体对我的代码做了哪些操作，同时也好奇动态库，静态库等在程序运行中是怎么被程序调用的，于是学习一波 《程序员的自我修养-链接装载与库》，通过这篇博客打卡&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>二进制兼容性问题C&#43;&#43;策略</title>
      <link>https://catcheroftime.github.io/blog/2019-10/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%85%BC%E5%AE%B9%E6%80%A7%E9%97%AE%E9%A2%98c-%E7%AD%96%E7%95%A5/</link>
      <pubDate>Wed, 02 Oct 2019 11:50:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-10/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%85%BC%E5%AE%B9%E6%80%A7%E9%97%AE%E9%A2%98c-%E7%AD%96%E7%95%A5/</guid>
      <description>&lt;h2 id=&#34;1-定义&#34;&gt;1. 定义&lt;/h2&gt;

&lt;p&gt;如果与旧版库&lt;strong&gt;动态链接&lt;/strong&gt;的程序&lt;strong&gt;无需重新编译&lt;/strong&gt;就可以与新版本库一起运行，则这个库就是&lt;font color=red&gt;二进制兼容性&lt;/font&gt;的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Qt-UI设计界面(大纲)</title>
      <link>https://catcheroftime.github.io/blog/2019-09/qt-ui%E8%AE%BE%E8%AE%A1%E7%95%8C%E9%9D%A2%E5%A4%A7%E7%BA%B2/</link>
      <pubDate>Thu, 05 Sep 2019 15:50:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-09/qt-ui%E8%AE%BE%E8%AE%A1%E7%95%8C%E9%9D%A2%E5%A4%A7%E7%BA%B2/</guid>
      <description>&lt;p&gt;最近突发奇想，想自己整理一份详细的QT开发过程中踩过的坑，也给自己查缺补漏一下。这一部分主要是总结UI &lt;code&gt;设计&lt;/code&gt; 下的所有可视化的按钮和控件， 在介绍默认的控件的同时也会相应总结类的常用使用方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Qt-进度条插件开发</title>
      <link>https://catcheroftime.github.io/blog/2019-08/qt-%E8%BF%9B%E5%BA%A6%E6%9D%A1%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/</link>
      <pubDate>Sat, 10 Aug 2019 20:45:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-08/qt-%E8%BF%9B%E5%BA%A6%E6%9D%A1%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/</guid>
      <description>&lt;p&gt;在 &lt;a href=&#34;https://www.cnblogs.com/feiyangqingyun/p/6128288.html&#34;&gt;飞扬青云&lt;/a&gt; 大佬的博客下,意外看到一款水波纹的进度条,整体看上去很美观,感觉适用的场景也很多 (1. 单纯的进度条显示 2. 当前状态的展示,例如CPU,内存之类使用的占比)，所以自己也尝试开发了一下.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Qt-时间轴2插件开发</title>
      <link>https://catcheroftime.github.io/blog/2019-07/qt-%E6%97%B6%E9%97%B4%E8%BD%B42%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/</link>
      <pubDate>Sun, 28 Jul 2019 18:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-07/qt-%E6%97%B6%E9%97%B4%E8%BD%B42%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/</guid>
      <description>&lt;p&gt;这篇文章介绍的自定义插件比较简单，主要都是通过绘图完成的。
特点如下： 1. 精度是可以放缩  2. 时间轴时间连续  3. 可以通过鼠标左右滑动改变时间轴显示时间。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Qt-时间轴1插件开发</title>
      <link>https://catcheroftime.github.io/blog/2019-07/qt-%E6%97%B6%E9%97%B4%E8%BD%B41%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/</link>
      <pubDate>Wed, 17 Jul 2019 20:45:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-07/qt-%E6%97%B6%E9%97%B4%E8%BD%B41%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/</guid>
      <description>&lt;p&gt;通过前面一节提到的 Qt 自定义插件的开发，开发出一个类似于统计一天不同时间段的插件，这种插件在摄像头的计划中能很频繁看到，例如0点到9点做录像任务， 9点到下午5点做行为检测任务， 晚上10点到12点继续做录像计划这种场景。而这篇文章主要记录一下自己开发过程中的一些思路和简单的代码解释，以及目前还存在问题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>python-request库opencv库简单使用说明</title>
      <link>https://catcheroftime.github.io/blog/2019-07/python-request%E5%BA%93opencv%E5%BA%93%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Mon, 15 Jul 2019 16:02:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-07/python-request%E5%BA%93opencv%E5%BA%93%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</guid>
      <description>&lt;p&gt;在使用 Python 编写测试脚本过程中， 进行服务端功能的测试&lt;br /&gt;
这个文档主要记录脚本中出现的库的安装方式和一些简单的使用说明&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Qt-自定义插件开发</title>
      <link>https://catcheroftime.github.io/blog/2019-07/qt-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/</link>
      <pubDate>Mon, 15 Jul 2019 00:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-07/qt-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/</guid>
      <description>&lt;p&gt;&lt;code&gt;Qt Designer&lt;/code&gt; 中自带的控件虽然能够在很大程度上满足我们日常的开发，但是当遇到一些比较特殊需求时，往往显得力不从心。
所以自定义插件的开发，并将其导入Qt的设计师中，这样可以像基本控件一样拖拽到UI界面中，同时也可以自定义一些属于插件的独有属性，直接在UI界面中配置，十分方便快捷。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL 是怎样运行的-第七部分</title>
      <link>https://catcheroftime.github.io/blog/2019-07/mysql-%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84-%E7%AC%AC%E4%B8%83%E9%83%A8%E5%88%86/</link>
      <pubDate>Thu, 04 Jul 2019 00:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-07/mysql-%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84-%E7%AC%AC%E4%B8%83%E9%83%A8%E5%88%86/</guid>
      <description>&lt;p&gt;这部分主要跟着大佬的脚步&lt;a href=&#34;https://juejin.im/book/5bffcbc9f265da614b11b731&#34;&gt;&amp;ldquo;MySQL 是怎样运行的：从根儿上理解 MySQL&amp;rdquo;&lt;/a&gt;，学习MySQL的Buffer Pool(缓冲池)。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL 是怎样运行的-第九部分</title>
      <link>https://catcheroftime.github.io/blog/2019-07/mysql-%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84-%E7%AC%AC%E4%B9%9D%E9%83%A8%E5%88%86/</link>
      <pubDate>Wed, 03 Jul 2019 00:20:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-07/mysql-%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84-%E7%AC%AC%E4%B9%9D%E9%83%A8%E5%88%86/</guid>
      <description></description>
    </item>
    
    <item>
      <title>MySQL 是怎样运行的-第八部分</title>
      <link>https://catcheroftime.github.io/blog/2019-07/mysql-%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84-%E7%AC%AC%E5%85%AB%E9%83%A8%E5%88%86/</link>
      <pubDate>Wed, 03 Jul 2019 00:20:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-07/mysql-%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84-%E7%AC%AC%E5%85%AB%E9%83%A8%E5%88%86/</guid>
      <description></description>
    </item>
    
    <item>
      <title>MySQL 是怎样运行的-第六部分</title>
      <link>https://catcheroftime.github.io/blog/2019-07/mysql-%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84-%E7%AC%AC%E5%85%AD%E9%83%A8%E5%88%86/</link>
      <pubDate>Wed, 03 Jul 2019 00:20:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-07/mysql-%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84-%E7%AC%AC%E5%85%AD%E9%83%A8%E5%88%86/</guid>
      <description>&lt;p&gt;这部分主要跟着大佬的脚步&lt;a href=&#34;https://juejin.im/book/5bffcbc9f265da614b11b731&#34;&gt;&amp;ldquo;MySQL 是怎样运行的：从根儿上理解 MySQL&amp;rdquo;&lt;/a&gt;，学习&lt;code&gt;MySQL&lt;/code&gt;选择各种执行方案的原因,以及如何优化的知识&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL 是怎样运行的-第五部分</title>
      <link>https://catcheroftime.github.io/blog/2019-07/mysql-%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84-%E7%AC%AC%E4%BA%94%E9%83%A8%E5%88%86/</link>
      <pubDate>Tue, 02 Jul 2019 15:08:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-07/mysql-%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84-%E7%AC%AC%E4%BA%94%E9%83%A8%E5%88%86/</guid>
      <description>&lt;p&gt;时隔10多天，才开始第五部分的总结，这部分主要跟着大佬的脚步&lt;a href=&#34;https://juejin.im/book/5bffcbc9f265da614b11b731&#34;&gt;&amp;ldquo;MySQL 是怎样运行的：从根儿上理解 MySQL&amp;rdquo;&lt;/a&gt;，学习MySQL单表查询，多表查询，以及访问方式的选择， 这一部分主要是Mysql内部的查询选择&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL 是怎样运行的-第四部分</title>
      <link>https://catcheroftime.github.io/blog/2019-06/mysql-%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84-%E7%AC%AC%E5%9B%9B%E9%83%A8%E5%88%86/</link>
      <pubDate>Thu, 20 Jun 2019 15:45:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-06/mysql-%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84-%E7%AC%AC%E5%9B%9B%E9%83%A8%E5%88%86/</guid>
      <description>&lt;p&gt;这部分主要跟着大佬的脚步&lt;a href=&#34;https://juejin.im/book/5bffcbc9f265da614b11b731&#34;&gt;&amp;ldquo;MySQL 是怎样运行的：从根儿上理解 MySQL&amp;rdquo;&lt;/a&gt;，学习一下&lt;code&gt;InnoDB&lt;/code&gt;、&lt;code&gt;MyISAM&lt;/code&gt; 这样的存储引擎是如何把表存储在文件系统上的，也就是如何存储到磁盘上的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL 是怎样运行的-第三部分</title>
      <link>https://catcheroftime.github.io/blog/2019-06/mysql-%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84-%E7%AC%AC%E4%B8%89%E9%83%A8%E5%88%86/</link>
      <pubDate>Wed, 19 Jun 2019 14:11:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-06/mysql-%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84-%E7%AC%AC%E4%B8%89%E9%83%A8%E5%88%86/</guid>
      <description>&lt;p&gt;结束了第二部分对于 &lt;code&gt;InnoDB&lt;/code&gt; 一个页存储数据详细的介绍，这一部分主要介绍由页组成的 &lt;code&gt;B+树&lt;/code&gt; 的总结，主要对应&lt;a href=&#34;https://juejin.im/book/5bffcbc9f265da614b11b731&#34;&gt;&amp;ldquo;MySQL 是怎样运行的：从根儿上理解 MySQL&amp;rdquo;&lt;/a&gt;上面的第七章和第八章&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>QSS&amp;CSS</title>
      <link>https://catcheroftime.github.io/blog/2019-06/qsscss/</link>
      <pubDate>Tue, 18 Jun 2019 00:15:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-06/qsscss/</guid>
      <description>&lt;p&gt;主要是记录一下自己子在给客户端美化过程中遇到的一些问题， 以及一些对Qt一些常用控件写好的demo&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL 是怎样运行的-第二部分</title>
      <link>https://catcheroftime.github.io/blog/2019-06/mysql-%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84-%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86/</link>
      <pubDate>Sat, 15 Jun 2019 15:51:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-06/mysql-%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84-%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86/</guid>
      <description>&lt;p&gt;时隔三天， 开始第二部分的总结了， 第二部分主要是介绍 InnoDB 的数据存储结构， 主要对应&lt;a href=&#34;https://juejin.im/book/5bffcbc9f265da614b11b731&#34;&gt;&amp;ldquo;MySQL 是怎样运行的：从根儿上理解 MySQL&amp;rdquo;&lt;/a&gt;上面的第五章和第六章&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>python 操作 MySQL示例</title>
      <link>https://catcheroftime.github.io/blog/2019-06/python-%E6%93%8D%E4%BD%9C-mysql%E7%A4%BA%E4%BE%8B/</link>
      <pubDate>Fri, 14 Jun 2019 11:12:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-06/python-%E6%93%8D%E4%BD%9C-mysql%E7%A4%BA%E4%BE%8B/</guid>
      <description>&lt;p&gt;使用python 简单操作mysql数据库,数据库的创建，表的创建，以及数据的增删改查&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL 零碎知识</title>
      <link>https://catcheroftime.github.io/blog/2019-06/mysql-%E9%9B%B6%E7%A2%8E%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Thu, 13 Jun 2019 16:00:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-06/mysql-%E9%9B%B6%E7%A2%8E%E7%9F%A5%E8%AF%86/</guid>
      <description>&lt;p&gt;这个文档主要统计一下不常用到的 &lt;code&gt;SQL&lt;/code&gt; 语句和一些知识点， 更新ing&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL 是怎样运行的-第一部分</title>
      <link>https://catcheroftime.github.io/blog/2019-06/mysql-%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84-%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86/</link>
      <pubDate>Wed, 12 Jun 2019 22:00:00 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-06/mysql-%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84-%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86/</guid>
      <description>&lt;p&gt;因为想整体了解 MySQL 整体的运行原理和设计原则， 认真读了一下在掘金上面的发布的小测&lt;a href=&#34;https://juejin.im/book/5bffcbc9f265da614b11b731&#34;&gt;&amp;ldquo;MySQL 是怎样运行的：从根儿上理解 MySQL&amp;rdquo;&lt;/a&gt;, 在已经囫囵吞枣的读完一遍之后，想在读第二遍的时候， 顺便整理一下属于自己的理解和文档。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugo_blog 配置说明</title>
      <link>https://catcheroftime.github.io/blog/2019-06/hugo_blog-%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Mon, 10 Jun 2019 12:54:26 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-06/hugo_blog-%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/</guid>
      <description>&lt;p&gt;使用Hugo生成静态网页， 并使用github托管&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mongodb4.0 Linux 配置说明</title>
      <link>https://catcheroftime.github.io/blog/2019-03/mongodb4.0-linux-%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Sun, 31 Mar 2019 12:54:26 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-03/mongodb4.0-linux-%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/</guid>
      <description>&lt;p&gt;介绍mongodb在linux下的安装和配置说明， 以及简单的使用说明&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>python操作Mongodb示例</title>
      <link>https://catcheroftime.github.io/blog/2019-03/python%E6%93%8D%E4%BD%9Cmongodb%E7%A4%BA%E4%BE%8B/</link>
      <pubDate>Sun, 31 Mar 2019 12:54:26 +0800</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/2019-03/python%E6%93%8D%E4%BD%9Cmongodb%E7%A4%BA%E4%BE%8B/</guid>
      <description>&lt;p&gt;使用python 简单操作mongodb数据库&lt;/p&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://catcheroftime.github.io/blog/1-01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://catcheroftime.github.io/blog/1-01/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>